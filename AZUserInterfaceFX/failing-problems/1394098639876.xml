<?xml version="1.0" encoding="UTF-8"?>
<experiment>
    <failure-description>
        <failure-description test-name="Local search" description="The Execution crushed with the exception: java.lang.UnsupportedOperationException: if you are using IdleDetected feature you must implements Agent.onIdleDetected method at bgu.dcr.az.api.Agent.onIdleDetected(Agent.java:394) at bgu.dcr.az.mas.cp.CPAgentController.handleIdle(CPAgentController.java:75) at bgu.dcr.az.mas.impl.BaseAgentController.onIdleDetected(BaseAgentController.java:108) at bgu.dcr.az.execs.AbstractProc.quota(AbstractProc.java:51) at bgu.dcr.az.execs.MultithreadedScheduler$Core$1.resolve(MultithreadedScheduler.java:198) at bgu.dcr.az.execs.ThreadSafeProcTable.startIdleDetectionResolving(ThreadSafeProcTable.java:225) at bgu.dcr.az.execs.MultithreadedScheduler$Core.resolveIdle(MultithreadedScheduler.java:194) at bgu.dcr.az.execs.MultithreadedScheduler$Core.run(MultithreadedScheduler.java:172) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:744) " execution-number="0" algorithm="DSA"/>
    </failure-description>
    <tests>
        <test seed="42" name="Local search" env="async">
            <algorithms>
                <algorithm name="DSA"/>
                <algorithm name="DSA-C"/>
                <algorithm name="MGM1"/>
                <algorithm name="MGM"/>
                <algorithm name="MaxSum"/>
                <algorithm name="MaxSumRandom1"/>
                <algorithm name="BoundedMaxSum"/>
                <algorithm name="MaxSumAD"/>
                <algorithm name="MaxSumADVPR"/>
                <algorithm name="MaxSumADVP"/>
            </algorithms>
            <problem-generator>
                <dcop-unstructured p1="0.1" d="20" max-cost="100" n="150"/>
            </problem-generator>
            <loop>
                <for-loop repeat-count="100" run-var="p1" start="0.1" end="0.9" tick-size="0.1">
                    <looper>
                        <do-once/>
                    </looper>
                </for-loop>
            </loop>
            <statistics>
                <cc-sc/>
                <item>Algorithm CPU time spending</item>
                <item>Number of cores in use</item>
                <msgc-sc type="BY_RUNVAR"/>
            </statistics>
        </test>
    </tests>
    <Statistics/>
</experiment>
