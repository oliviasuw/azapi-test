/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Console.java
 *
 * Created on 27/10/2011, 12:44:24
 */
package bgu.csp.az.dev.pui;

import bc.swing.pfrm.BaseParamModel;
import bc.swing.pfrm.ParamView;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import javax.swing.text.StyledEditorKit;

/**
 *
 * @author bennyl
 */
public class Console extends javax.swing.JPanel implements ParamView{

    /** Creates new form Console */
    public Console() {
        initComponents();
        output.setEditorKit(new StyledEditorKit());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        output.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        output.setForeground(new java.awt.Color(245, 151, 151));
        output.setText("bla");
        jScrollPane1.setViewportView(output);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane output;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setParam(BaseParamModel param) {
        final Document doc = (Document) param.getValue();
        doc.addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                output.setCaretPosition(doc.getLength());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
//                throw new UnsupportedOperationException("Not supported yet.");
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
//                throw new UnsupportedOperationException("Not supported yet.");
            }
        });
        output.setDocument(doc);
    }

    @Override
    public void reflectChangesToParam(BaseParamModel to) {
    }

    @Override
    public void onChange(BaseParamModel source, Object newValue, Object deltaHint) {
    }
}
